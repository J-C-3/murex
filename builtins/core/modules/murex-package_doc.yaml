- DocumentID: murex-package
  Title: >+
    `murex-package`
  CategoryID: commands
  Summary: >-
    _murex_'s package manager
  Description: |-
    _murex_ comes with it's own package manager to make managing plugins easier.

    The format of the packages is a directory, typically located at `~/.murex_modules`,
    which contains one or more murex scripts. Each script can be it's own module.
    ie there are multiple modules that can be grouped together and distributed as a
    single package.

    The way packages and modules are represented is as a path:
    
    ```
    package/module
    ```
    
    `murex-package` is a package management tool for administrating murex modules
    and packages.
  Usage: |-
    Install a new package

    ```
    murex-package: install uri
    ```

    Update all packages

    ```
    murex-package: update
    ```

    Enable a package or module which had been disabled

    ```
    murex-package: enable package

    murex-package: enable package/module
    ```

    Disable a package

    ```
    murex-package: disable package

    murex-package: disable package/module
    ```

    Import packages from another package database

    ```
    murex-package: import [ uri/ | local/path/ ]packages.json
    ```

    Check status of murex packages

    ```
    murex-package: status -> <stdout>
    ```
  Examples: |-
  Flags:
    install: Installs a package from a user defined URI
    update: Updates all installed packages
    enable: Enables a previously disabled package or module
    disable: Disables a previously enabled package or module
    import: Import packages described in a backup package DB from user defined URI or local path
    status: Returns the version status of locally installed packages
    list: Returns a list of indexed packages/modules (eg what's enabled or disabled)
  Detail: |-
    ### `murex-package: list`... `enabled` vs `loaded`

    `enabled` and `disabled` reads the package status from disk rather than the
    package cache in your current _murex_ session (like `runtime` reports). This
    because the typical use for `murex-package list enabled|disabled` is to view
    which packages and modules will be loaded with any new murex session.
    
    If you wish to view what modules are loaded in a current session then use
    `murex-package list loaded` instead. This is also equivalent to using
    `runtime --modules`.
  Synonyms:
  Related:
  - runtime
  - config
  - murex-docs
  - function
  - private
  - alias
  - user-guide/profile
  - user-guide/modules
