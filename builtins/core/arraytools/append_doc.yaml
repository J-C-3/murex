- DocumentID: addheading
  Title: >-
    `addheading` 
  CategoryID: commands
  Summary: >-
    Adds headings to a table
  Description: |-
    `addheading` takes a list of parameters and adds them to the start of a table.
    Where `prepend` is designed to work with arrays, `addheading` is designed to
    prepend to tables.
  Usage: |-
    ```
    <stdin> -> addheading: value value value ... -> <stdout>
    ```
  Examples: |-
    ```
    » tout: jsonl '["Bob", 23, true]' -> addheading name age active                                                                                   
    ["name","age","active"]
    ["Bob","23","true"]
    ```
  Detail:
  Synonyms:
  Related:
  - index
  - element
  - cast
  - append
  - prepend
  - a
  - ja
  - count
  - mtac
  - msort
  - match
  - regexp


- DocumentID: prepend
  Title: >-
    `prepend` 
  CategoryID: commands
  Summary: >-
    Add data to the start of an array
  Description: |-
    `prepend` a data to the start of an array.
  Usage: |-
    ```
    <stdin> -> prepend: value -> <stdout>
    ```
  Examples: |-
    ```
    » a: [January..December] -> prepend: 'New Year'
    New Year
    January
    February
    March
    April
    May
    June
    July
    August
    September
    October
    November
    December
    ```
  Detail: |-
    It's worth noting that `prepend` and `append` are not data type aware. So 
    any integers in data type aware structures will be converted into strings:

    ```
    » tout: json [1,2,3] -> prepend: new 
    [
        "new",
        "1",
        "2",
        "3"
    ]
    ```
  Synonyms:
  Related:
  - index
  - element
  - cast
  - append
  - addheading
  - a
  - ja
  - count
  - mtac
  - msort
  - match
  - regexp


- DocumentID: append
  Title: >+
    `append`
  CategoryID: commands
  Summary: >-
    Add data to the end of an array
  Description: |-
    `append` data to the end of an array.
  Usage: |-
    ```
    <stdin> -> append: value -> <stdout>
    ```
  Examples: |-
    ```
    » a: [Monday..Sunday] -> append: Funday
    Monday
    Tuesday
    Wednesday
    Thursday
    Friday
    Saturday
    Sunday
    Funday
    ```
  Detail: |-
    It's worth noting that `prepend` and `append` are not data type aware. So 
    any integers in data type aware structures will be converted into strings:

    ```
    » tout: json [1,2,3] -> append: new 
    [
        "1",
        "2",
        "3",
        "new"
    ]
    ```
  Synonyms:
  Related:
  - index
  - element
  - cast
  - prepend
  - addheading
  - a
  - ja
  - count
  - index
  - range
  - mtac
  - msort
  - match
  - regexp
